Chp1
---------------------------------------------------------------------------------------------

Q1. Where is primitive variable & non primitive stored in the memory ?
--> Primitive variable is stored in 'Stack'.
    Non-primitive object is stored in 'Heap' but reference variable is stored in 'Stack'.

Q2. What is wrapper class ?
--> Generally Primitive variable have own wrapper class corresponding to the the data type
    Eg . int == Integer wrapper class ,
         float == Float wrapper class ,
         char == Character wrapper class .

Q3. What is auto-boxing and unboxing ?
--> Auto-boxing is used to automatically convert primitive data type to it's corresponding wrapper class object ( int to Integer )
    Un-boxing is used to automatically ---- corresponding wrapper class object to primitive data type ( Integer to int )

Q4. Is there any fixed size of non primitives ?
--> No, but it does get memory post calculation , JVM sometime uses primitive data types to calculate memory
    Eg : String name = "Rohit"; // char = 2 byte , total 5 char ( 5*2=10 byte of memory being used )

Q5. Where is instance variable , reference variable and local variable stored in the memory ?
--> Instance variable,Local variable,Reference variable = Stack memory
    Object (Not reference variable) = Heap memory

Q6. What is default value of local variable ? If yes, what is the value ?
--> No, there's no any default value for local variable

Q7. 'int a = 10' what does 'int' , 'a' , '10' denote ?
--> 'int' = Data type
     'a'  = Variable
     '10' = Literal

Q8. Can we use access specifier on local variable ?
--> No, we cannot use access modifier / specifier on local variable

Q9. Where is literal stored in memory of Java ?
--> Static memory

Chp2
---------------------------------------------------------------------------------------------

Q1. Explain 'main()' method ?
--> public class A {      // class Name
        public static void main(String[] args) {
            // 1. Access modifier ( public )
            // 2. Keyword to access method without making Object ( static )
            // 3. Keyword for method with no any return value ( void )
            // 4. Method name ( main )
            // 5. Parameter's for the method ( String[] args )
            System.out.println("Hello world");
        }
    }

Q2. Explain what changes we can do in 'main()' method ?
--> 1. Order of access modifier can be changed : static public void ...
    2. We can declare String[] args in any form : String args[] / String[] args / String []args
    3. You can changed identifier name from 'args' to anything in 'String[] args'
    4. We can use var args instead of 'String[] args' to 'String... args'

Q3. Explain System.out.println()
--> System ( class from package java.lang )
    .out ( Static variable of Print Stream from above System class )
    .println() ( It is method of Print Stream class )

Q4. Will it Compile ? Explain main( String ... args )
--> Yes,

Q5. Will it Compile ? Abc.java is file name but we have public class name A { } ? If yes, how will it run ?
--> Yes it will compiler by creating .class file of A eg: A.class which we can compile it in JVM

Q6. What if we have two class, and name of file is Abc.java then how will it compile ?
        1. class A including main()
        2. class B
--> It will create two '.class' file :
    1. A.class
    2. B.class
    but it will only compile A.class because it contains main()

Chp3
---------------------------------------------------------------------------------------------

Just read everything

Chp4
---------------------------------------------------------------------------------------------

Q1. What does Control statements do ?
--> It controls the flow of a program like only executing the part we want as per our requirement

Chp5
---------------------------------------------------------------------------------------------

Q1. What package do we import to get User Input ?
--> java.util

Q2. What class do we use from 'java.util' package ?
--> Scanner class

Q3. Name some methods from Scanner class.
--> next() , nextInt() , nextFloat() , etc..

Q4. What is recursive method ?
--> Recursive method is a method which calls itself to solve a problem ( it can be direct or indirect )

Chp6
---------------------------------------------------------------------------------------------

Q1. What is an Array ? Please mention Superclass of Arrays .
--> Array is collection of Same data types / Homogenous data types
    Array is a Object with Superclass - Object class

Q2. What will happen if we remove one element from Array ?
--> Ihe elements in array are stored consecutively in memory locations ,
    thus if we delete one element we need to traverse through out the array which will reduce the performance

Q3. If we try to convert primitive type to wrapper class object conversion then will it happen ?
--> No it won't because Java doesn't allow this conversion implicitly

Q4. Read default values

Q5. Will this compile : int [] mix = new int[]{10,20,30};
--> Yes, here we are declaring , creating and initializing the Array

Q6. Explain for each loop & How can you implement it in Retrieving elements from Array ?
--> For each loop is enhanced for loop / for each where it iterates and loop
    continues until it finishes the collection / array
    We can use in array to retrieve all array elements

Q7. Explain difference in : 1. int[] a , b; & 2. int a[] , b;
--> 1. a and b both are int Arrays (1-D)
    2. a is the only int Array (1-D) and b is int variable

Q8. Explain difference in 1. int[][] a , b[]; & 2. int[][] a , []b;
--> 1. a is int Array (2-D) and b is int Array (3-D)
    2. a is int Array (2-D) but as soon as it tries to declare b int array it throws 'Compiler time error' cuz
    Providing dimension to first var '[]a' is correct but on second variable it should be after the variable like -> 'b[]'

Q9. What is difference in 'Matrix Array' & 'Jagged Array' ?
--> 1. Matrix Array has same no of columns and rows in it ; rows are 2 and columns are 3
    2. Jagged Array is opposite of Matrix Array ; rows are 2 and column1 has 3 columns , column2 has 2 columns

Q10. What will happen if we try to print a[0] from int[][] a = new int[2][]; ?
--> It will print 'null' cuz